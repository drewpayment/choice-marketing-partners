{"version":3,"sources":["edit.js"],"names":[],"mappingsfile":"edit.js","sourcesContent":["$(document).ready(function() {\n    var overrideTblElem = $('#overridesTable'),\n            expenseTblElem = $('#expensesTable'),\n            invoiceData = JSON.parse($('#invoiceTable').text()),\n            overrideData = JSON.parse(overrideTblElem.text()),\n            expenseData = JSON.parse(expenseTblElem.text());\n\n        var overrides = (overrideTblElem.data('length') > 2),\n            expenses = (expenseTblElem.data('length') > 2);\n\n        var overrideBtn = $('#addOverrides').find('i');\n\n        var overrideBtnIcon = (overrides) ? 'fa-minus' : 'fa-plus';\n        var overrideBtnIconInverse = (overrides) ? 'fa-plus' : 'fa-minus';\n        overrideBtn.addClass(overrideBtnIcon);\n\n        var expenseBtn = $('#addExpenses').find('i'),\n            expenseBtnIcon = (expenses) ? 'fa-minus' : 'fa-plus',\n            expenseBtnIconInverse = (expenses) ? 'fa-plus' : 'fa-minus';\n        expenseBtn.addClass(expenseBtnIcon);\n\n        if(!overrides) $('#overrides').css('display', 'none');\n        if(!expenses) $('#expenses').css('display', 'none');\n\n\n\n        $(function(){\n            var saveBtn = $('#saveInvoice');\n\n            $(document).on('click', '#addOverrides', function(){\n                var el = $(this),\n                    $ovr = $('#overrides');\n                if(el.find('i').hasClass(overrideBtnIcon)){\n                    el.find('i').removeClass(overrideBtnIcon).addClass(overrideBtnIconInverse);\n                    overrides = true;\n                } else {\n                    el.find('i').removeClass(overrideBtnIconInverse).addClass(overrideBtnIcon);\n                    overrides = false;\n                }\n\n                if(expenses){\n                    $ovr.fadeToggle({\n                        done: function(){\n                            overHot.render();\n                        }\n                    });\n                } else {\n                    saveBtn.fadeToggle({\n                        done: function(){\n                            $ovr.fadeToggle({\n                                done: function(){\n                                    saveBtn.fadeToggle();\n                                    overHot.render();\n                                }\n                            });\n                        }\n                    });\n                }\n\n\n            });\n\n            $(document).on('click', '#addExpenses', function(){\n                var el = $(this),\n                    $exp = $('#expenses');\n\n                if(el.find('i').hasClass(expenseBtnIcon)){\n                    el.find('i').removeClass(expenseBtnIcon).addClass(expenseBtnIconInverse);\n                    expenses = true;\n                } else {\n                    el.find('i').removeClass(expenseBtnIconInverse).addClass(expenseBtnIcon);\n                    expenses = false;\n                }\n\n                if(overrides){\n                    $exp.fadeToggle({\n                        done: function(){\n                            expHot.render();\n                        }\n                    });\n                } else {\n                    saveBtn.fadeToggle({\n                        done: function(){\n                            $exp.fadeToggle({\n                                done: function(){\n                                    saveBtn.fadeToggle();\n                                    expHot.render();\n                                }\n                            });\n                        }\n                    });\n                }\n\n            });\n        });\n\n        $(document).on('click', 'button', handleClick);\n\n        var formValid = {\n            status: true,\n            saleDate: true\n        }\n        var lengthValidator = function(value, callback) {\n            setTimeout(function() {\n                if(value.length == 40 || value.length < 40){\n                    formValid.status = true;\n                    callback(true);\n                } else {\n                    formValid.status = false;\n                    callback(false);\n                }\n            }, 1000);\n        }\n\n        var paystubContainer = document.getElementById('invoiceTable');\n        var paystubHot = new Handsontable(paystubContainer, {\n            minRows: 10,\n            minCols: 6,\n            rowHeaders: true,\n            colHeaders: [\n                'Sale Date', 'First Name', 'Last Name', 'Address', 'City', 'Sale Status', 'Amount'\n            ],\n            colWidths: [\n                120, 140, 160, 270, 150, 100, 100\n            ],\n            contextMenu: true,\n            allowInsertColumn: false,\n            allowRemoveColumn: false,\n            minSpareRows: 1,\n            data: invoiceData,\n            dataSchema: {\n                sale_date: null,\n                custName: { first_name: null, last_name: null },\n                address: null,\n                city: null,\n                status: null,\n                amount: null\n            },\n            columns: [\n                {data: 'sale_date', type: 'date', dateFormat: 'MM-DD-YYYY', correctFormat: true},\n                {data: 'first_name'},\n                {data: 'last_name'},\n                {data: 'address'},\n                {data: 'city'},\n                {data: 'status', validator: lengthValidator},\n                {data: 'amount'}\n            ]\n        });\n\n        var overrideContainer = document.getElementById('overridesTable');\n        var overHot = new Handsontable(overrideContainer, {\n            minRows: 3,\n            maxRows: 50,\n            rowHeaders: true,\n            colHeaders: ['Name', '# of Sales', 'Commission', 'Total'],\n            colWidths: ['140', '100', '120', '100'],\n            contextMenu: true,\n            allowInsertColumn: false,\n            allowRemoveColumn: false,\n            minSpareRows: 1,\n            data: overrideData,\n            dataSchema: {\n                name: null,\n                sales: null,\n                commission: null,\n                total: null\n            },\n            columns: [\n                {data: 'name'},\n                {\n                    data: 'sales',\n                    className: 'htRight'\n                },\n                {\n                    data: 'commission',\n                    className: 'htRight',\n                    type: 'numeric',\n                    format: '0.00'\n                },\n                {\n                    data: 'total',\n                    className: 'htRight',\n                    type: 'numeric',\n                    format: '0.00'\n                }\n            ]\n        });\n\n        var expenseContainer = document.getElementById('expensesTable');\n        var expHot = new Handsontable(expenseContainer, {\n            minRows: 3,\n            maxRows: 10,\n            rowHeaders: true,\n            colHeaders: ['Type', 'Amount', 'Notes'],\n            colWidths: ['140', '100', '240'],\n            contextMenu: true,\n            allowInsertColumn: false,\n            allowRemoveColumn: false,\n            minSpareRows: 1,\n            data: expenseData,\n            dataSchema: {\n                type: null,\n                amount: null,\n                notes: null\n            },\n            columns: [\n                {data: 'type'},\n                {\n                    data: 'amount',\n                    className: 'htRight',\n                    type: 'numeric',\n                    format: '0.00'\n                },\n                {data: 'notes'}\n            ]\n        });\n\n\n        var prepareDataArrays = function(data, hot){\n            var result = [];\n            $.each(data, function(i, o){\n                if(!hot.isEmptyRow(i)) result.push(o);\n            });\n            return result;\n        };\n\n\n        /*\n        * handles when the user clicks save!\n        *\n         */\n        $(document).on('click', '#saveInvoice', function(){\n            setCommonUserInfo();\n\n            var indSalesArr = [],\n                overridesArr = [],\n                expensesArr = [];\n\n            var individualRows = prepareDataArrays(paystubHot.getData(), paystubHot),\n                overrideRows, expenseRows;\n\n            if(overrides) overrideRows = prepareDataArrays(overHot.getData(), overHot);\n            if(expenses) expenseRows = prepareDataArrays(expHot.getData(), expHot);\n\n            $.each(individualRows, function(i, o){\n                if(o !== null && o !== undefined){\n                    indSalesArr.push(setNewSale(o));\n                }\n            });\n\n            $.each(overrideRows, function(i, o){\n                if(o !== null && o !== undefined){\n                    overridesArr.push(setNewOverride(o));\n                }\n            });\n\n            $.each(expenseRows, function(i, o){\n                if(o !== null && o !== undefined){\n                    expensesArr.push(setNewExpense(o));\n                }\n            });\n\n            var input = {\n                individual: indSalesArr,\n                hasOverrides: overrides,\n                hasExpenses: expenses,\n                overrides: overridesArr,\n                expenses: expensesArr,\n                vendorId: $('[data-vendorid]').data('vendorid'),\n                employeeId: $('[data-agentid]').data('agentid'),\n                date: moment($('#issue-date').text(), 'MM-DD-YYYY').format('YYYY-MM-DD'),\n                endDate: moment($('#week-ending').text(), 'MM-DD-YYYY').format('YYYY-MM-DD')\n            };\n\n            var options = {\n                url: '/invoices/handle-edit-invoice',\n                type: 'POST',\n                dataType: 'JSON',\n                data: {\n                    input: JSON.stringify(input)\n                },\n                afterData: afterData\n            };\n\n            /*\n            * check to make sure that the end user has submitted either: sales, overrides or expenses AND\n            * filled out the required form fields to ensure that the invoice can be saved\n            */\n            if(input.individual.length || input.hasOverrides || input.hasExpenses &&\n                input.vendorId > -1 &&\n                input.employeeId > 0 &&\n                input.date.length &&\n                input.endDate.length) {\n\n                if(formValid.status) {\n                    fireAjaxRequest(options);\n                } else {\n                    setMessageContainer(\n                        'Please check the fields highlighted red in the status column. Max value is 40 characters.',\n                        null,\n                        'danger'\n                    );\n                }\n            } else {\n                var errorMsg = 'Sorry, you need to fill out the form before you can submit the invoice.';\n                setMessageContainer(errorMsg, null, 'danger');\n            }\n\n\n            function afterData(data){\n                if(data.status){\n                    setMessageContainer(data.message);\n                } else {\n                    setMessageContainer(data.message, null, 'danger');\n                }\n            }\n\n        });\n});"]}