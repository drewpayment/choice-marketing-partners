{"version":3,"sources":["upload.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"upload.js","sourcesContent":["var overrides = false,\n\texpenses = false;\n\n$(function(){\n    var saveBtn = $('#saveInvoice');\n\t$('#wkendDate').datepicker();\n\n\t$(document).on('click', '#addOverrides', function(){\n\t    var el = $(this),\n\t\t\t$ovr = $('#overrides');\n\t    if(el.find('i').hasClass('fa-plus')){\n            el.find('i').removeClass('fa-plus').addClass('fa-minus');\n            overrides = true;\n\t\t} else {\n\t        el.find('i').removeClass('fa-minus').addClass('fa-plus');\n\t        overrides = false;\n\t\t}\n\n\t\tif(expenses){\n\t        $ovr.fadeToggle({\n\t\t\t\tdone: function(){\n\t\t\t\t    overHot.render();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n            saveBtn.fadeToggle({\n                done: function(){\n                    $ovr.fadeToggle({\n                        done: function(){\n                            saveBtn.fadeToggle();\n                            overHot.render();\n                        }\n                    });\n                }\n            });\n\t\t}\n\n\n\t});\n\n\t$(document).on('click', '#addExpenses', function(){\n        var el = $(this),\n\t\t\t$exp = $('#expenses');\n\n        if(el.find('i').hasClass('fa-plus')){\n            el.find('i').removeClass('fa-plus').addClass('fa-minus');\n            expenses = true;\n        } else {\n            el.find('i').removeClass('fa-minus').addClass('fa-plus');\n            expenses = false;\n        }\n\n        if(overrides){\n            $exp.fadeToggle({\n\t\t\t\tdone: function(){\n\t\t\t\t    expHot.render();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n            saveBtn.fadeToggle({\n                done: function(){\n                    $exp.fadeToggle({\n                        done: function(){\n                            saveBtn.fadeToggle();\n                            expHot.render();\n                        }\n                    });\n                }\n            });\n\t\t}\n\n\t});\n});\n\n$(document).on('click', 'button', handleClick);\n\nvar formValid = {\n\tstatus: true,\n\tsaleDate: true\n}\nvar lengthValidator = function(value, callback) {\n\tsetTimeout(function() {\n\t\tif(value.length == 40 || value.length < 40){\n\t\t\tformValid.status = true;\n\t\t\tcallback(true);\n\t\t} else {\n\t\t\tformValid.status = false;\n\t\t\tcallback(false);\n\t\t}\n\t}, 1000);\n}\n\nvar paystubContainer = document.getElementById('invoiceTable');\nvar paystubHot = new Handsontable(paystubContainer, {\n\tminRows: 10,\n\tminCols: 6,\n\trowHeaders: true,\n\tcolHeaders: [\n\t\t'Sale Date', 'First Name', 'Last Name', 'Address', 'City', 'Sale Status', 'Amount'\n\t],\n\tcolWidths: [\n\t\t120, 140, 160, 270, 150, 100, 100\n\t],\n\tcontextMenu: true,\n\tallowInsertColumn: false,\n\tallowRemoveColumn: false,\n\tminSpareRows: 1,\n\tdata: [],\n\tdataSchema: {\n\t\tsaleDate: null,\n\t\tcustName: { first: null, last: null },\n\t\taddress: null,\n\t\tcity: null,\n\t\tstatus: null,\n\t\tamount: null\n\t},\n\tcolumns: [\n\t\t{data: 'saleDate', type: 'date', dateFormat: 'MM/DD/YYYY'},\n\t\t{data: 'custName.first'},\n\t\t{data: 'custName.last'},\n\t\t{data: 'address'},\n\t\t{data: 'city'},\n\t\t{data: 'status', validator: lengthValidator},\n\t\t{data: 'amount'}\n\t]\n});\n\nvar overrideContainer = document.getElementById('overridesTable');\nvar overHot = new Handsontable(overrideContainer, {\n    minRows: 3,\n    maxRows: 15,\n    rowHeaders: true,\n    colHeaders: ['Name', '# of Sales', 'Commission', 'Total'],\n    colWidths: ['140', '100', '120', '100'],\n    contextMenu: true,\n    allowInsertColumn: false,\n    allowRemoveColumn: false,\n    minSpareRows: 1,\n    data: [],\n    dataSchema: {\n        name: null,\n        sales: null,\n        commission: null,\n        total: null\n    },\n    columns: [\n        {data: 'name'},\n        {\n            data: 'sales',\n\t\t\tclassName: 'htRight'\n\t\t},\n        {\n            data: 'commission',\n\t\t\tclassName: 'htRight',\n\t\t\ttype: 'numeric',\n\t\t\tformat: '0.00'\n\t\t},\n        {\n            data: 'total',\n\t\t\tclassName: 'htRight',\n\t\t\ttype: 'numeric',\n\t\t\tformat: '0.00'\n        }\n    ]\n});\n\nvar expenseContainer = document.getElementById('expensesTable');\nvar expHot = new Handsontable(expenseContainer, {\n    minRows: 3,\n    maxRows: 10,\n    rowHeaders: true,\n    colHeaders: ['Type', 'Amount', 'Notes'],\n    colWidths: ['140', '100', '240'],\n    contextMenu: true,\n    allowInsertColumn: false,\n    allowRemoveColumn: false,\n    minSpareRows: 1,\n    data: [],\n    dataSchema: {\n        type: null,\n        amount: null,\n        notes: null\n    },\n    columns: [\n        {data: 'type'},\n        {\n            data: 'amount',\n\t\t\tclassName: 'htRight',\n\t\t\ttype: 'numeric',\n\t\t\tformat: '0.00'\n\t\t},\n        {data: 'notes'}\n    ]\n});\n\n\nvar prepareDataArrays = function(data, hot){\n    var result = [];\n\t$.each(data, function(i, o){\n\t    if(!hot.isEmptyRow(i)) result.push(o);\n\t});\n\treturn result;\n};\n\n\n/*\n* handles when the user clicks save!\n*\n */\n$(document).on('click', '#saveInvoice', function(){\n    setCommonUserInfo();\n\n    var indSalesArr = [],\n\t\toverridesArr = [],\n\t\texpensesArr = [];\n\n\tvar individualRows = prepareDataArrays(paystubHot.getData(), paystubHot),\n\t\toverrideRows, expenseRows;\n\n\tif(overrides) overrideRows = prepareDataArrays(overHot.getData(), overHot);\n\tif(expenses) expenseRows = prepareDataArrays(expHot.getData(), expHot);\n\n\t$.each(individualRows, function(i, o){\n\t\tif(o !== null && o !== undefined){\n\t\t    indSalesArr.push(setNewSale(o));\n\t\t}\n\t});\n\n\t$.each(overrideRows, function(i, o){\n\t   \tif(o !== null && o !== undefined){\n\t   \t    overridesArr.push(setNewOverride(o));\n\t\t}\n\t});\n\n\t$.each(expenseRows, function(i, o){\n\t    if(o !== null && o !== undefined){\n\t        expensesArr.push(setNewExpense(o));\n\t\t}\n\t});\n\n    var input = {\n        individual: indSalesArr,\n        hasOverrides: overrides,\n        hasExpenses: expenses,\n\t\toverrides: overridesArr,\n\t\texpenses: expensesArr,\n\t\tvendorId: $('#vendor').val(),\n\t\temployeeId: $('#employee').val(),\n\t\tdate: moment($('#issueDate').val(), 'MM-DD-YYYY').format('YYYY-MM-DD'),\n\t\tendDate: moment($('#wkendDate').val(), 'MM-DD-YYYY').format('YYYY-MM-DD')\n    };\n\n    var options = {\n        url: '/upload/save-invoice',\n\t\ttype: 'POST',\n\t\tdataType: 'JSON',\n\t\tdata: { \n\t\t\tinput: JSON.stringify(input) \n\t\t},\n\t\tafterData: afterData\n\t};\n\n    /*\n    * check to make sure that the end user has submitted either: sales, overrides or expenses AND\n    * filled out the required form fields to ensure that the invoice can be saved\n    */\n    if(input.individual.length || input.hasOverrides || input.hasExpenses &&\n\t\tinput.vendorId > -1 &&\n\t\tinput.employeeId > 0 &&\n\t\tinput.date.length &&\n\t\tinput.endDate.length) {\n\n\t\tif(formValid.status) {\n\t\t\tfireAjaxRequest(options);\n\t\t} else {\n\t\t\tsetMessageContainer(\n\t\t\t\t'Please check the fields highlighted red in the status column. Max value is 40 characters.',\n\t\t\t\tnull,\n\t\t\t\t'danger'\n\t\t\t);\n\t\t}\n        \n\t} else {\n        var errorMsg = 'Sorry, you need to fill out the form before you can submit the invoice.';\n        setMessageContainer(errorMsg, null, 'danger');\n\t}\n\n\n\tfunction afterData(data){\n\t    if(data.status){\n\t        setMessageContainer(data.message);\n\t        resetHOT();\n\t\t} else {\n\t        setMessageContainer(data.message, null, 'danger');\n\t\t}\n\t}\n\n});"]}