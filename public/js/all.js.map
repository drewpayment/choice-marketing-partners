{"version":3,"sources":["paystubs.js","employees.js","upload.js","custom.js","dashboard.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrtjfile":"all.js","sourcesContent":["/**\n * Created by drewpayment on 2/25/17.\n */\n\n\nfunction showDeletePaystubConfirmDialog(data){\n\n    $.ajax({\n        url: '/paystub/delete/confirm',\n        type: 'GET',\n        dataType: 'html',\n        success: afterData\n    });\n\n    function afterData(data){\n        remoteModal(data, afterDeleteStubConfirmShow);\n    }\n\n}\n\n\nfunction afterDeleteStubConfirmShow(){\n\n    // do we need to do anything when the confirmation window is shown?\n\n}\n\n\nfunction handleDeletePaystub(data){\n\n    var id = $('#employee').val();\n    var date = $('#issueDate').val();\n    var token = $('#global-token').attr('content');\n\n    $.ajax({\n        url: '/paystub/delete/submit',\n        data: {\n            _token: token,\n            id: id,\n            date: date\n        },\n        type: 'POST',\n        dataType: 'json',\n        success: afterData\n    });\n\n    function afterData(data){\n        if(data){\n            $('#modal_layout').modal('hide');\n            window.location.reload();\n        }\n    }\n\n}","\n// vars\n\nvar token;\nvar currentObj;\n\n\n// methods\n\nfunction setEmployeeUpdateObj(id){\n\treturn {\n\t\tid: id\n\t}\n}\n\nfunction refreshEmployeesAfterControl(data){\n\n\tvar el = $(data.e),\n\t\tshowall;\n\n\tif(data.value == 0){\n\t\tel.data('value', 1);\n\t\tel.addClass('active');\n\t\tshowall = true;\n\t} else {\n\t\tel.data('value', 0);\n\t\tel.removeClass('active');\n\t\tshowall = false;\n\t}\n\n    token = (token == undefined) ? $(data.e).data('showtoken') : token;\n\n\t$.ajax({\n\t\turl: 'refresh-employees',\n\t\ttype: 'POST',\n\t\tdataType: 'html',\n\t\tdata: {\n\t\t\tshowall: showall,\n\t\t\t_token: token\n\t\t},\n\t\tsuccess: afterData\n\t});\n\n\tfunction afterData(data){\n\n\t\t$.when($('#EMPLOYEE_ROWDATA').html(data)).then(function(){\n            var elem = $('[data-tag=\"3\"]');\n            if(showall){\n                elem.removeAttr('data-value');\n                elem.attr('data-value', 1);\n                elem.addClass('active');\n            } else {\n                elem.removeAttr('data-value');\n                elem.attr('data-value', 0);\n                elem.removeClass('active');\n            }\n\n            wireButtonEvents(true, null);\n\t\t});\n\t}\n\n}\n\nfunction handleEmployeeChangesSubmission(data){\n\tvar props = Object.getOwnPropertyNames(data);\n    var emp = setEmployeeUpdateObj(data.id);\n\tfor(var i = 0; i < props.length; i++){\n\t\tvar p = props[i];\n\t\tif(p !== \"isactive\"){\n            if(data[p] === null || data[p] === undefined || data[p] == \"\"){\n                delete data[p];\n            }\n\t\t}\n\t}\n\n\temp.id = data.id;\n    emp.is_active = (data.isactive) ? 1 : 0;\n    if(data.name !== undefined) emp.name = data.name;\n\tif(data.email !== undefined) emp.email = data.email;\n\tif(data.phone !== undefined) emp.phone_no = data.phone;\n\tif(data.address !== undefined) emp.address = data.address;\n\tdata.token = (data.token == undefined) ? $(data.e).closest('[data-token=\"true\"]').data('value') : data.token;\n\n\t$.ajax({\n\t\turl: '/update-employee',\n\t\ttype: 'POST',\n\t\tdataType: 'html',\n\t\tdata: {\n\t\t\t_token: data.token,\n\t\t\tdata: emp\n\t\t}, success: afterData\n\t});\n\n\n\tfunction afterData(data){\n\t\tif(data){\n\t\t\tsetMessageContainer(\"Employee updated!\");\n\t\t}\n\t}\n\n}\n\nfunction showEmployeeInfoModal(data){\n\n\ttoken = $('[data-token=\"true\"]').data('value');\n\tdata.value = (data.value == undefined) ? $(data.e).closest('[data-value]').data('value') : data.value;\n\n    $.ajax({\n        url: './editemployee/',\n        type: 'POST',\n        dataType: \"html\",\n        data: {\n            id: data.value,\n            _token: token\n        },\n\t\tsuccess: afterData\n    });\n\n    function afterData(result){\n        remoteModal(result, afterShowEmployeeChangeModal);\n\t}\n}\n\n\nfunction showAddNewEmployeeModal(data){\n\n    token = $('[data-token=\"true\"]').data('value');\n    data.value = (data.value == undefined) ? $(data.e).closest('[data-value]').data('value') : data.value;\n\n    $.ajax({\n        url: '/employees/create',\n        type: 'GET',\n        dataType: \"html\",\n        success: afterData\n    });\n\n    function afterData(result){\n        remoteModal(result, afterAddEmpModalShow);\n    }\n}\n\n\nfunction handleSubmitNewEmployee(data){\n\n\t$.ajax({\n\t\turl: '/employee/create-ajax',\n\t\ttype: 'POST',\n\t\tdataType: \"html\",\n\t\tdata: {\n\t\t\t_token: token,\n\t\t\tdata: data\n\t\t},\n\t\tsuccess: afterData\n\t});\n\n\tfunction afterData(data){\n\t\tif(data){\n\t\t\tvar obj = {\n\t\t\t\te: $('[data-tag=\"3\"]')\n\t\t\t};\n\n            refreshEmployeesAfterControl(obj);\n\n\t\t\tsetMessageContainer(\"The employee was successfully added!\");\n\t\t}\n\t}\n\n}\n\n\nvar salesIDs = {\n\t9: 'sales_id1',\n\t10: 'sales_id2',\n\t11: 'sales_id3'\n};\n\n\nfunction handleUpdateSalesID(data){\n\ttoken = $('[data-token=\"true\"]').data('value');\n\tvar item = {\n\t\tuserId: data.parentid,\n\t\tsalesId: salesIDs[data.tag],\n\t\tvalue: data.value\n\t};\n\n\t$.ajax({\n\t\turl: '/employee/update/salesid',\n\t\ttype: 'POST',\n\t\tdataType: 'json',\n\t\tdata: {\n\t\t\t_token: token,\n\t\t\tdata: JSON.stringify(item)\n\t\t},\n\t\tsuccess: afterData\n\t});\n\n\tfunction afterData(data){\n\t\tif(data){\n\t\t\tsetMessageContainer(\"Success!\");\n\t\t}\n\t}\n}\n\n\nfunction setEmployeeUpdateItem(tag){\n\treturn {\n        tag: tag,\n        id: null,\n        name: null,\n        email: null,\n        phone: null,\n        address: null,\n        isactive: null,\n        token: (token != undefined) ? token : $('[data-token=\"true\"]').data('value')\n\t}\n}\n\n\nfunction afterAddEmpModalShow(){\n\t$('[data-tag=\"6\"]').on('click', function(e){\n\t\te.stopImmediatePropagation();\n\t\tvar item = setEmployeeUpdateItem(6);\n\t\titem.name = $('#empName').val();\n\t\titem.email = $('#empEmail').val();\n\t\titem.address = $('#empAddress').val();\n\t\titem.phone = $('#empPhone').val();\n\t\titem.isactive = true;\n\n\t\t$.when(processDataTag(item)).then(function(){\n\t\t\t$('#modal_layout').modal('hide');\n\t\t});\n\t});\n}\n\n\nfunction afterShowEmployeeChangeModal(){\n\t$('[data-tag=\"4\"]').on('click', function(e){\n\t\te.stopImmediatePropagation();\n\t\tvar data = {\n\t\t\ttag: 4,\n\t\t\tid: $('#emp_id').data('parentid'),\n\t\t\tname: $('#emp_name').val(),\n\t\t\temail: $('#emp_email').val(),\n\t\t\tphone: $('#emp_phone').val(),\n\t\t\taddress: $('#emp_address').val(),\n            isactive: $('#emp_active').prop('checked'),\n\t\t\ttoken: $('[data-token=\"true\"]').data('value')\n        };\n\n\t\t$.when(processDataTag(data)).then(function(){\n\t\t\t$('#modal_layout').modal('hide');\n\t\t\twindow.location.reload();\n\t\t});\n\t})\n}\n\n$(function(){\n\tvar $modal = $('#modal_layout');\n\t$modal.on('hidden.bs.modal', function(){\n\t\t$modal.removeData();\n\t\t$modal.html('');\n\t});\n});","\n// Vars\n\nvar MODAL_ELEM = $('#modal_layout'),\n\tsalesList = [],\n\toverList = [],\n\tcurrentAgentId,\n\tcurrentIssueDt,\n\tcurrentWkEnding,\n\toverHot,\n    expHot,\n\ttoken,\n    expensesList = [],\n    vendor;\n\nvar setNewSale = function (s){\n    return {\n        id: s[0],\n        date: s[1],\n        name: {\n            first: s[2],\n            last: s[3]\n        },\n        address: s[4],\n        city: s[5],\n        status: s[6],\n        amount: s[7],\n        agentid: null,\n        issueDate: null,\n        wkending: null,\n        vendor: null\n    };\n};\n\n\nvar setNewOverride = function (o){\n    return {\n        id: o[0],\n        name: o[1],\n        numOfSales: o[2],\n        commission: o[3],\n        total: o[4],\n        agentid: currentAgentId,\n        issueDate: currentIssueDt,\n        wkending: currentWkEnding\n    };\n};\n\n\nvar setNewExpense = function (e){\n    var issue = new Date(currentIssueDt);\n    return {\n        type: e[0],\n        amount: e[1],\n        notes: e[2],\n        agentid: currentAgentId,\n        issueDate: issue.toLocaleDateString(),\n        wkending: currentWkEnding\n    }\n};\n\nvar inputParams = {\n    vendorid: null,\n    issue_date: null,\n    agentid: null\n};\n\n\n\n// Functions\n\n\nfunction handleSubmitNewInvoice(data){\n    setCommonUserInfo(false);\n\n    var invoiceData = paystubHot.getData();\n    var overrideData = overHot.getData();\n    var expenseData = expHot.getData();\n\n    var invoices = cleanArray(invoiceData, paystubHot);\n    var overrides = cleanArray(overrideData, overHot);\n    var expenses = cleanArray(expenseData, expHot);\n\n    $.each(invoices, function(i, obj){\n        var issue = new Date(currentIssueDt);\n        if(obj !== null && obj !== undefined){\n            var s = setNewSale(obj);\n            s.id = i;\n            s.agentid = currentAgentId;\n            s.issueDate = issue.toLocaleDateString();\n            s.wkending = currentWkEnding;\n            s.vendor = vendor;\n            salesList.push(s);\n        }\n    });\n\n    $.each(overrides, function(i, obj){\n        var issue = new Date(currentIssueDt);\n        if(obj !== null && obj !== undefined) {\n            var o = setNewOverride(obj);\n            o.id = i;\n            o.agentid = currentAgentId;\n            o.issueDate = issue.toLocaleDateString();\n            o.wkending = currentWkEnding;\n            overList.push(o);\n        }\n    });\n\n    $.each(expenses, function(i, obj){\n        if(obj !== null && obj !== undefined){\n            var e = setNewExpense(obj);\n            expensesList.push(e);\n        }\n    });\n\n    $.ajax({\n        url: '/upload/invoice',\n        type: 'POST',\n        data: {\n            _token: token,\n            sales: salesList,\n            overrides: overList,\n            expenses: expensesList\n        },\n        dataType:'JSON'\n    }).done(function(data){\n\n        if(data) {\n            setMessageContainer(\"Success!\");\n            resetHOT();\n        }\n\n    });\n\n}\n\n\nfunction resetHOT(){\n    salesList = [];\n    overList = [];\n    expensesList = [];\n    paystubHot.updateSettings({\n        data: []\n    });\n    overHot.updateSettings({\n        data: []\n    });\n    expHot.updateSettings({\n        data: []\n    });\n}\n\n\n// function verifyOverrides(){\n//\n// \t$.ajax({\n// \t\turl: '/upload/overrides-modal',\n// \t\ttype: 'GET',\n// \t\tdataType: 'html'\n// \t}).done(function(data){\n// \t\tMODAL_ELEM.html(data);\n//\n// \t\twireButtonEvents(true, '#modal_layout');\n// \t});\n//\n// }\n\n\nfunction setCommonUserInfo(edit){\n    if(edit){\n        currentAgentId = $('#employee').data('id');\n        currentIssueDt = moment($('#issueDate').data('date'), 'YYYY-MM-DD').format('MM-DD-YYYY');\n        currentWkEnding = $('#wkendDate').data('weekending');\n        vendor = $('#vendor').data('vendor');\n    } else {\n        currentAgentId = $('#employee').val();\n        currentIssueDt = new Date($('#issueDate').val());\n        currentWkEnding = $('#wkendDate').val();\n        vendor = $('#vendor').val();\n    }\n    token = $('meta[name=\"csrf-token\"]').attr('content');\n}\n\n\nfunction returnInvoiceSearchResults(token){\n    inputParams.vendorid = $('#campaignName').val();\n    inputParams.issue_date = $('#invoiceDates').val();\n    inputParams.agentid = $('#employeeName').val();\n\n    $.ajax({\n        url: '/getSearchResults',\n        type: 'POST',\n        data: {\n            _token: token,\n            inputParams: inputParams\n        },\n        dataType: 'html'\n    }).done(function(data){\n        $('#TABLE_ROWDATA').html(data);\n    });\n}\n\n\nfunction updateExistingInvoice(newToken){\n    setCommonUserInfo(true);\n\n    var invoiceData = paystubHot.getData();\n    var overrideData = overHot.getData();\n    var expenseData = expHot.getData();\n\n    var invoices = cleanArray(invoiceData, paystubHot);\n    var overrides = cleanArray(overrideData, overHot);\n    var expenses = cleanArray(expenseData, expHot);\n\n    $.each(invoices, function(i, obj){\n        var issue = new Date(currentIssueDt);\n        if(obj !== null && obj !== undefined){\n            var s = setNewSale(obj);\n            s.id = i;\n            s.agentid = currentAgentId;\n            s.issueDate = issue.toLocaleDateString();\n            s.wkending = currentWkEnding;\n            s.vendor = vendor;\n            salesList.push(s);\n        }\n    });\n\n    $.each(overrides, function(i, obj){\n        var issue = new Date(currentIssueDt);\n        if(obj !== null && obj !== undefined) {\n            var o = setNewOverride(obj);\n            o.id = i;\n            o.agentid = currentAgentId;\n            o.issueDate = issue.toLocaleDateString();\n            o.wkending = currentWkEnding;\n            overList.push(o);\n        }\n    });\n\n    $.each(expenses, function(i, obj){\n        if(obj !== null && obj !== undefined){\n            var e = setNewExpense(obj);\n            expensesList.push(e);\n        }\n    });\n\n    $.ajax({\n        url: '/invoices/editExistingInvoice',\n        type: 'POST',\n        data: {\n            _token: newToken,\n            sales: salesList,\n            overrides: overList,\n            expenses: expensesList\n        },\n        dataType:'JSON'\n    }).done(function(data){\n\n        if(data) {\n            setMessageContainer(\"Success!\");\n            resetHOT();\n        }\n\n    });\n}\n\n\n// function cancelOverrides(event){\n//\n// \t// need to handle where user gets sent after clicking no\n//\n// \tMODAL_ELEM.modal('hide');\n// }\n\n\n// MODAL_ELEM.off().on('shown.bs.modal', function(){\n// \t// hide/show modal to handle refreshing content\n// \tMODAL_ELEM.modal('hide').modal('show');\n// });\n\n\n\n// Register events\n\n// $(document).on('show.bs.modal', MODAL_ELEM, function(e){ verifyOverrides(e); });\n// $(document).on('click', '#noOvrBtn', function(e) { cancelOverrides(e); }); // no overrides, cancel and return\n// $(document).on('click', '#yesOvrBtn', function(e) { handleOverridesInput(); }); // include overrides, advance to overrides input view\n\n\n","\n\n\nvar tag = {\n\n\tSUBMIT_INVOICE_BTN: 1,\n\tSHOW_EDIT_EMP_MODAL: 2,\n\tSHOW_ALL_EMP: 3,\n    SUBMIT_EMP_CHANGES: 4,\n    SHOW_ADD_EMP_MODAL: 5,\n    SUBMIT_NEW_EMPLOYEE: 6,\n    CONFIRM_PAYSTUB_DEL: 7,\n    DELETE_PAYSTUB: 8,\n    UPDATE_SALES_ONE: 9,\n    UPDATE_SALES_TWO: 10,\n    UPDATE_SALES_THREE: 11\n\n};\n\n// after event controls\n\n\nfunction processDataTag(data){\n    // data.tag must be coerced, because they're set as string\n    switch(+data.tag){\n        case tag.SUBMIT_INVOICE_BTN:\n            handleSubmitNewInvoice(data);\n            break;\n        case tag.SHOW_EDIT_EMP_MODAL:\n            showEmployeeInfoModal(data);\n            break;\n        case tag.SUBMIT_EMP_CHANGES:\n            handleEmployeeChangesSubmission(data);\n            break;\n        case tag.SHOW_ALL_EMP:\n            refreshEmployeesAfterControl(data);\n            break;\n        case tag.SHOW_ADD_EMP_MODAL:\n            showAddNewEmployeeModal(data);\n            break;\n        case tag.SUBMIT_NEW_EMPLOYEE:\n            handleSubmitNewEmployee(data);\n            break;\n        case tag.CONFIRM_PAYSTUB_DEL:\n            showDeletePaystubConfirmDialog(data);\n            break;\n        case tag.DELETE_PAYSTUB:\n            handleDeletePaystub(data);\n            break;\n        case tag.UPDATE_SALES_ONE:\n            handleUpdateSalesID(data);\n            break;\n        case tag.UPDATE_SALES_TWO:\n            handleUpdateSalesID(data);\n            break;\n        case tag.UPDATE_SALES_THREE:\n            handleUpdateSalesID(data);\n            break;\n        default:\n            break;\n    }\n}\n\n\nvar handleClick = function(evt){\n    evt.stopPropagation();\n    var parent, dataList, data, element;\n\n    var $target = $(evt.target);\n    if($target.data('vero') != 'button') return false;\n    dataList = $target.data();\n    data = {};\n    data.e = evt.target;\n\n    if(dataList[\"parentid\"] == undefined){\n        parent = ($target.closest('[data-parent=\"true\"]').length) ? $target.closest('[data-parent=\"true\"]') : $('[data-parent=\"true\"]');\n        data.parent = parent;\n        data.parentid = ($(parent).data('parentid') == undefined) ? null : $(parent).data('parentid');\n    } else {\n        data.parentid = dataList[\"parentid\"];\n        data.parent = $('[data-parentid='+data.parentid+'\"]').get();\n    }\n\n    element = evt.target;\n    // Cycle over each attribute on the element\n    for (var i = 0; i < element.attributes.length; i++) {\n        // Store reference to current attr\n        attr = element.attributes[i];\n        // If attribute nodeName starts with 'data-'\n        if (/^data-/.test(attr.nodeName)) {\n            // Log its name (minus the 'data-' part), and its value\n            data[attr.nodeName.replace(/^data-/, '')] = attr.nodeValue;\n        }\n    }\n\n    data.parentid = (data.parentid == null) ? -1 : data.parentid;\n    data.tag = (data.tag === undefined) ? $(data.e).closest('[data-tag]').data('tag') : data.tag;\n\n    processDataTag(data);\n};\n\n\n// handles blurs on input elements with \"data-vero='text'\"\nvar handleBlur = function(evt){\n    evt.stopPropagation();\n    var parent, elem, dataList, data, element;\n\n    if($(evt.target).data('vero') != 'text') return false;\n    if(evt.target.value == evt.target.defaultValue) return false;\n\n    if(evt.target !== evt.currentTarget){\n        elem = $(evt.target);\n        dataList = elem.data();\n        data = {};\n\n        data.e = evt.target;\n        data.value = $(elem).val();\n\n        if(dataList[\"parentid\"] == undefined) {\n            parent = (elem.closest('[data-parent=\"true\"]').length > 0) ? elem.closest('[data-parent=\"true\"]') : $('[data-parent=\"true\"]');\n            data.parent = parent;\n            data.parentid = ($(parent).data('parentid') === undefined) ? null : $(parent).data('parentid');\n        } else {\n            data.parentid = dataList[\"parentid\"];\n            data.parent = $('[data-parentid=\"'+data.parentid+'\"]').get();\n        }\n\n        element = evt.target;\n        // Cycle over each attribute on the element\n        for (var i = 0; i < element.attributes.length; i++) {\n            // Store reference to current attr\n            attr = element.attributes[i];\n            // If attribute nodeName starts with 'data-'\n            if (/^data-/.test(attr.nodeName)) {\n                // Log its name (minus the 'data-' part), and its value\n                data[attr.nodeName.replace(/^data-/, '')] = attr.nodeValue;\n            }\n        }\n\n\n        data.parentid = (data.parentid == null) ? -1 : data.parentid;\n        data.tag = (data.tag === undefined) ? $(data.e).closest('[data-tag]').data('tag') : data.tag;\n\n    } else {\n        elem = $(evt.currentTarget);\n        dataList = elem.data();\n        data = {};\n\n        data.e = elem;\n        data.value = $(elem).val();\n\n        if(dataList[\"parentid\"] == undefined){\n            parent = (elem.closest('[data-parent=\"true\"]').length > 0) ? elem.closest('[data-parent=\"true\"]') : $('[data-parent=\"true\"]');\n            data.parent = parent;\n            data.parentid = ($(parent).data('parentid') === undefined) ? -1 : $(parent).data('parentid');\n        } else {\n            data.parentid = dataList[\"parentid\"];\n            data.parent = $('[data-parentid=\"'+data.parentid+'\"]').get();\n        }\n\n        element = evt.currentTarget;\n        for(var i = 0; i < element.attributes.length; i++){\n            attr = element.attributes[i];\n            if(/^data-/.test(attr.nodeName)){\n                data[attr.nodeName.replace(/^data-/, '')] = attr.nodeValue;\n            }\n        }\n\n        data.parentid = (data.parentid == null) ? -1 : data.parentid;\n        data.tag = (data.tag === undefined) ? $(data.e).closest('[data-tag]').data('tag') : data.tag;\n    }\n\n    processDataTag(data);\n};\n\n\n/**\n * standard method to wire events, bool wireEvent and optionally specify container\n *\n * @param wireEvent\n * @param container\n */\nfunction wireButtonEvents(wireEvent, container){\n\n    // parent containers available on page load\n    if(container === undefined || container === null) {\n        container = document.querySelector('body');\n\n\n    } else {\n        container = document.querySelector(container);\n    }\n\n\n\n    if(wireEvent){\n        // wire up initialized container\n        if(container !== undefined && container !== null) {\n            container.addEventListener(\"click\", handleClick);\n        }\n    }\n\n}\n\n\n/**\n * set toast notification to show user successful message\n *\n * @param message\n * @param callback\n */\nvar setMessageContainer = function(message, callback){\n    var myToast = new ax5.ui.toast({\n        width: 200,\n        icon: '<i class=\"fa fa-thumbs-up\"></i>',\n        containerPosition: \"bottom-right\"\n    });\n\n    myToast.push({\n        theme: 'primary',\n        msg: message\n    });\n\n    if(callback == typeof 'function') callback.call();\n};\n\n\n/**\n * JavaScript helper functions in website\n */\n\n\n/**\n * remove empty entries in object array\n * @param data\n * @param hot\n * @returns {{}}\n */\nfunction cleanArray(data, hot) {\n    var temp = {};\n\n    $.each(data, function(idx, obj){\n       if(!hot.isEmptyRow(idx)) temp[idx] = obj;\n    });\n\n    return temp;\n}\n\n\n/**\n * create universal modal within website, pass fillable html to modal and callback function for further action after modal is shown\n *\n * @param html\n * @param callback\n */\nfunction remoteModal(html, callback){\n    var modal = $('#modal_layout');\n\n    $.when(modal.html(html)).then(function(){\n        modal.on('shown.bs.modal', function(){\n            callback();\n        }).modal('show');\n    });\n}\n\n\n/**\n * handle ajax requests that return an error\n * @param data\n */\nfunction ajaxErrorHandler(data){\n    console.log(data.statusText);\n    console.dir(data);\n}\n\n\nfunction ajaxSuccessHandler(data){\n    console.log(\"The success handler was not defined.\");\n    console.dir(data);\n}\n\n\n/**\n * standard ajax request handler\n * @param options\n */\nfunction fireAjaxRequest(options){\n    if(options === undefined) ajaxErrorHandler(\"Options object is undefined.\");\n\n    var settings = {\n        url: (options.url === undefined) ? null : options.url,\n        type: (options.type === undefined) ? 'GET' : options.type,\n        data: (options.data.length === 0) ? {} : options.data,\n        dataType: (options.dataType === undefined) ? 'JSON' : options.dataType,\n        success: (options.afterData === undefined) ? ajaxSuccessHandler : options.afterData,\n        error: ajaxErrorHandler\n    };\n\n    $.ajax(settings);\n}","/**\n * Created by drewpayment on 3/12/17.\n * Dashboard view for Admin users\n */\n\n\n// build sales by week highchart on page load\n$(document).ready(function(){\n    if(!$('#salesByWeek').length) return false;\n    var a = JSON.parse($('#salesByWeek').find('.jsdata').text()),\n        xAxis = [],\n        series1 = [],\n        series2 = [],\n        series3 = [],\n        series4 = [], d,\n        visibility = [];\n\n    for(var i = 0; i < a.xAxis.length; i++){\n        d = a.xAxis[i];\n        var item = moment(d.issue_date, 'YYYY-M-D').format('MMM Do').toString();\n        xAxis.push(item);\n    }\n\n    // accepted sales\n    for(var i = 0; i < a.xAxis.length; i++){\n        var acc = (a.accepted == undefined) ? 0 : a.accepted[i],\n            rej =(a.rejected == undefined) ? 0 : a.rejected[i],\n            chg = (a.chargebacks == undefined) ? 0 : a.chargebacks[i],\n            unc = (a.uncategorized == undefined) ? 0 : a.uncategorized[i];\n\n        if(acc == null || acc == undefined){\n            series1.push(null);\n        } else {\n            series1.push(acc.saleCount);\n        }\n\n        if(rej == null || rej == undefined){\n            series2.push(null);\n        } else {\n            series2.push(rej.saleCount);\n        }\n\n        if(chg == null || chg == undefined){\n            series3.push(null);\n        } else {\n            series3.push(chg.saleCount);\n        }\n\n        if(unc == null || unc == undefined){\n            series4.push(null);\n        } else {\n            series4.push(unc.saleCount);\n        }\n    }\n\n    // this figures out if the series has all empty points in it,\n    // and if it does, sets the series' visibility to default to false on the graph\n    var allSeries = [series1, series2, series3, series4];\n    for(var i = 0; i < 4; i++){\n        visibility[i] = (allSeries[i].every(isUndefined)) ? false : true;\n    }\n\n    var options = {\n        chart: {\n            type: 'column'\n        },\n        credits: {\n            enabled: false\n        },\n        title: {\n            text: null\n        },\n        xAxis: {\n            categories: xAxis\n        },\n        yAxis: {\n            title: {\n                text: null\n            }\n        },\n        plotOptions: {\n            stacking: 'normal'\n        },\n        tooltip: {\n            borderColor: '#000000',\n            formatter: function () {\n                var s = '<b>'+this.x+'</b>';\n                $.each(this.points, function(i, point){\n                    s += '<br/><h3 class=\"bold\" style=\"color:'+point.series.color+';\">'+point.series.name+': '+point.y+'</h3>';\n                });\n                return s;\n            },\n            shared: true\n        },\n        series: [{\n            name: \"Accepted\",\n            data: series1,\n            color: '#19b73e',\n            visible: visibility[0]\n        }, {\n            name: \"Rejected\",\n            data: series2,\n            color: '#9e9e9e',\n            visible: visibility[1]\n        }, {\n            name: 'Chargebacks',\n            data: series3,\n            color: '#f20707',\n            visible: visibility[2]\n        }, {\n            name: 'Uncategorized',\n            data: series4,\n            color: '#8c6b6b',\n            visible: visibility[3]\n        }]\n    };\n\n    $('#salesByWeek').highcharts(options);\n\n});\n\n\nvar isUndefined = function(elem){\n    return elem == undefined;\n};\n\n\nfunction handlePaidConfirmClick(data){\n    var userId = data.parentid;\n    var isPaid = data.value;\n    token = $('#global-token').attr('content');\n\n    isPaid = (isPaid) ? 1 : 0;\n\n    $.ajax({\n        url: 'handlePayrollClick',\n        type: 'POST',\n        dataType: 'json',\n        data: {\n            userId: userId,\n            isPaid: isPaid,\n            _token: token\n        },\n        success: afterData\n    });\n\n    function afterData(data){\n        if(data){\n            setMessageContainer(\"Success!\");\n        }\n    }\n}\n\n\nfunction refreshPayrollInfoTable(data){\n    var date = data.value;\n    token = (token) ? token : $('#global-token').attr('content');\n\n    date = moment(date, 'MM-DD-YYYY');\n    date = date.format('YYYY-MM-DD').toString();\n\n    $.ajax({\n        url: 'refreshPayrollInfo',\n        type: 'GET',\n        dataType: 'html',\n        data: {\n            date: date\n        },\n        success: afterData\n    });\n\n    function afterData(data){\n        if(data){\n            $('#TABLE_ROWDATA').html(data);\n        }\n    }\n}"]}